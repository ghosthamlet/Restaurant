

# https://jeffknupp.com/blog/2014/05/06/automatically-generate-restful-endpoints-from-your-flasksqlalchemy-models/
# https://github.com/jeffknupp/sandman2
# https://github.com/jfinkels/flask-restless
# https://github.com/mevdschee/php-crud-api 

'''A sample declarative model using Sqlalchemy'''
from sqlalchemy import Column, String, Integer, create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

Base = declarative_base()

class Order(Base):
    __tablename__ = 'order'

    id = Column(Integer, primary_key=True)
    status = Column(String(50))

#engine instance
engine = create_engine('sqlite:///E:\\code\\restaurant\\db\\restaurant.db')
#create tables through your meta data
Base.metadata.create_all(engine)

#now here is the flaskrestgen api at play
from flask import Flask 
from flaskrestgen import RESTApi


app = Flask(__name__)
db_session = sessionmaker(engine)()

#create and instance of flaskrestgen
restApi = RESTApi(app, db_session, validation_file='validation.json')
#generates GET, POST, PUT and DELETE for Order model
restApi.rest_for(Order)


if __name__ == '__main__':
    app.run(host='localhost', port=8000)
